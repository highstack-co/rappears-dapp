{"version":3,"sources":["config/index.ts","components/layout/Flex.tsx","assets/images/gears.png","views/Earn/Heading.tsx","views/Earn/Nebula.tsx","assets/images/smoke.png","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Earn/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/Earn/components/FarmCard/CardHeading.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","views/Earn/components/NFTContainer.tsx","views/Earn/components/DepositModal.tsx","views/Earn/components/FarmCard/StakeAction.tsx","views/Earn/components/FarmCard/HarvestAction.tsx","views/Earn/components/FarmCard/CardActionsContainer.tsx","views/Earn/components/FarmCard/FarmCard.tsx","views/Earn/Earn.tsx","components/custom/Heading.tsx","components/custom/Card.tsx","hooks/useWeb3.ts","components/layout/Container.tsx","components/layout/Page.tsx","hooks/useContract.ts","assets/images/brickBg.jpg"],"names":["BigNumber","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BASE_EXCHANGE_URL","FlexLayout","styled","div","TitleSubtitleBox","animateLightBar","keyframes","TextBoxAnimation","TextAnimation","BorderShow","Wrapper","TextBox","H1","h1","P","p","LightBar","Flex","FarmImg","img","Heading","scene","camera","renderer","composer","style","flex","src","Gears","alt","cloudParticles","render","canvas","domElement","width","clientWidth","height","clientHeight","setSize","aspect","updateProjectionMatrix","resizeCanvasToDisplaySize","forEach","rotation","z","requestAnimationFrame","Canvas","BG","BrickBg","Nebula","useEffect","bg","THREE","window","innerWidth","innerHeight","position","x","y","loadingManager","ambient","add","directionalLight","set","purple","blue","green","document","querySelector","fog","setClearColor","color","loader","load","Smoke","texture","cloudGeo","cloudMaterial","map","transparent","cloud","Math","random","PI","material","opacity","push","txture","textureEffect","PostProcessing","blendFunction","COLOR_DODGE","blendMode","value","bloomEffect","kernelSize","SMALL","useLuminanceFilter","luminanceThreshold","luminanceSmoothing","effectPass","renderToScreen","addPass","Init","id","theme","colors","primary","ExpandableSectionButton","onClick","expanded","role","bold","defaultProps","StyledLinkExternal","LinkExternal","text","DetailsSection","bscScanAddress","lpLabel","removed","totalValueFormated","addLiquidityUrl","TranslateString","useI18n","justifyContent","href","external","LockExpiredTag","props","variant","outline","startIcon","CardHeading","Tag","noPenaltyTime","farmImage","tokenSymbol","useState","setCompleted","countdownTimerComplete","Number","Date","alignItems","mb","flexDirection","date","onMount","completed","onComplete","renderCounter","InfoText","days","hours","minutes","seconds","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","child","i","Container","selected","locked","borderColor","Img","LabelSpace","LockedOverlay","span","NFTContainer","label","Disclaimer","ModalBody","FlexGrid","DepositModal","onDismiss","nfts","setNfts","onConfirmNfts","pendingTx","setPendingTx","selectedCount","setSelectedCount","title","Object","values","nft","newNftsInWallet","newSelectedCount","disabled","a","margin","IconButtonWrapper","StakeAction","poolContract","useContract","RewardPoolAbi","getAddress","rewardPoolByAddress","nftContract","RappearsABI","rappearNftsByAddress","isRegisteredNft","setIsRegisteredNft","randomNumb","setRandomNum","dispatch","useDispatch","account","useWeb3React","fetchData","registeredIds","console","log","methods","listRegisteredTokens","call","tokensOfOwner","heldIds","nftRegistration","Logo","indexOf","nftsToRegister","keys","filter","registerForRewards","send","from","fetchRewardPoolAsync","displayBalance","useModal","onPresentDeposit","ButtonText","HarvestAction","harvestableEarnings","setHarvestableEarnings","totalAmount","calcHarvestTotForUser","toFixed","onConfirmHarvest","harvestRewards","minWidth","Action","CardActions","useWeb3","textTransform","fontSize","pr","earnings","farmAddress","ConnectWalletButton","mt","Divider","ExpandingWrapper","FarmCard","cakePrice","bnbPrice","rewardPool","useRewardPool","rewardsPaidOut","treasuryHoldings","registeredNfts","rewardsDisplay","toString","dividedBy","showExpandableSection","setShowExpandableSection","Card","animate","padding","display","CardActionsContainer","ControlContainer","mediaQueries","sm","Hero","textSubtle","ToggleWrapper","Text","LabelWrapper","FilterContainer","ViewControls","HelpLabel","Farms","useRouteMatch","path","farmsLP","useFarmsV2","usePriceCakeBusd","x2pPrice","usePriceX2PBusd","usePriceBnbBusd","fastRefresh","useRefresh","activeFarms","useCallback","farmsToDisplay","cakePriceVsBNB","farm","index","tokenAmount","lpTotalInQuoteToken","cakeRewardPerYear","rewardTokenPerBlock","times","apy","quoteTokenSymbol","QuoteToken","CAKE","lpTokenBalanceMC","liquidity","BNB","X2P","farmsList","Page","textAlign","marginTop","target","rel","Heading1","pulse","Card1","css","library","refEth","useRef","Web3","getWeb3NoAccount","web3","setweb3","current","lg","abi","address","useMemo","getContract"],"mappings":"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","file":"static/js/5.8018a2f7.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BLOCKS_PER_YEAR = new BigNumber(2350600)\nexport const BSC_BLOCK_TIME = 15\nexport const CAKE_POOL_PID = 1\nexport const BASE_URL = 'https://babyfarm.netlify.app'\nexport const BASE_EXCHANGE_URL = 'https://app.uniswap.org'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add/v2`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool/v2`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","export default __webpack_public_path__ + \"static/media/gears.da1a3e99.png\";","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Gears from \"assets/images/gears.png\";\n\nconst TitleSubtitleBox = styled.div`\n  flex: 3;\n  padding: 10px;\n`;\nconst animateLightBar = keyframes`\n\t0%,5% {\n\t\ttransform: scaleY(0) ;\n\t}\n    10%{\n        transform: scaleY(1) ;\n    }\n\t90% {\n        transform: scaleY(1) ;\n\t}\n\t95%,100% {\n        transform: scaleY(0) ;\n\t}\n`;\nconst TextBoxAnimation = keyframes`\n   0%,5% {\n\t\ttransform: translate3d(-80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(-80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst BorderShow = keyframes`\n    0%{\n\t\topacity:0;\n\t}\n   \n\t95% {\n        opacity:0;\n\t}\n    100%{\n        opacity:1;\n    }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin: 1rem auto;\n  width: 90vw;\n  max-width: 1200px;\n  background-color: #04d9ff24;\n  border-radius: 10px;\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    box-shadow: inset 0 0 0.1em #04d9ff, inset 0 0 3em #04d9ff,\n      inset 0 0 0.4em #04d9ff, 0 0 5em #04d9ff;\n    animation: ${BorderShow} 2s linear forwards;\n    border: 5px solid #fff;\n    border-radius: inherit;\n  }\n  @media only screen and (min-width: 576px) {\n    margin: 0 auto;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 80%;\n  }\n  @media only screen and (min-width: 992px) {\n    width: 60vw;\n  }\n`;\nconst TextBox = styled.div`\n  overflow: hidden;\n  width: 100%;\n  animation: ${TextBoxAnimation} 2s linear forwards;\n  padding: 1rem 1rem;\n`;\nconst H1 = styled.h1`\n  font-size: inherit;\n  color: #fff;\n  text-shadow: 0 0 0.2em #ff3333, 0 0 0.3em #ff3333, 0 0 0.5em #ff3333,\n    0 0 8.8em #ff3333, 0 0 8.6em #ff3333;\n\n`;\nconst P = styled.p`\n  font-size: 0.3em;\n  line-height: 1;\n  color: #fff;\n  text-shadow: 0 0 0.1em #ff3333, 0 0 0.2em #ff3333, 0 0 0.4em #ff3333,\n    0 0 0.8em #ff3333, 0 0 1.6em #ff3333;\n`;\n\nconst LightBar = styled.div`\n  position: relative;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 10px;\n  background-color: #fff;\n  z-index: 2;\n  box-shadow: 0 0 10px #04d9ff, 0 0 20px #04d9ff, 0 0 40px #04d9ff,\n    0 0 80px #04d9ff, 0 0 120px #04d9ff;\n  animation: ${animateLightBar} 2s linear forwards;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  animation: ${TextAnimation} 2s linear forwards;\n  font-size: 4rem;\n  h1 {\n    text-align: center;\n  }\n  p {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-around;\n    font-size: 5rem;\n    > * {\n      width: 50%;\n    }\n    h1,\n    p {\n      text-align: left;\n    }\n  }\n`;\nconst FarmImg = styled.img`\n  width: 150px;\n  height: 100%;\n`;\nfunction Heading() {\n  return (\n    <Wrapper>\n      <TextBox>\n        <Flex>\n          <TitleSubtitleBox>\n            <H1>\n              EARN ROYALTIES\n              <br />\n            </H1>\n            <P>Register your Rappear for staking to earn music and trade royalties.</P>\n          </TitleSubtitleBox>\n          <FarmImg style={{ flex: 1 }} src={Gears} alt=\"Staking Image\" />\n        </Flex>\n\n        <LightBar />\n      </TextBox>\n    </Wrapper>\n  );\n}\n\nexport default Heading;\n","import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport * as PostProcessing from \"postprocessing\";\nimport BrickBg from 'assets/images/brickBg.jpg'\nimport styled from \"styled-components\";\nimport Smoke from 'assets/images/smoke.png'\n\n\nlet scene;\nlet camera;\nlet renderer;\nconst cloudParticles = [] as any;\nlet composer;\n\nfunction resizeCanvasToDisplaySize() {\n  const canvas = renderer.domElement;\n  // look up the size the canvas is being displayed\n  const width = canvas.clientWidth;\n  const height = canvas.clientHeight;\n\n  // adjust displayBuffer size to match\n  if (canvas.width !== width || canvas.height !== height) {\n    // you must pass false here or three.js sadly fights the browser\n    renderer.setSize(width, height, false);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    // update any render target sizes here\n  }\n}\n\nconst onWindowResize = () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n};\n\nconst Init = (bg = 0x140c0c) => {\n  scene = new THREE.Scene();\n  camera = new THREE.PerspectiveCamera(\n    60,\n    window.innerWidth / window.innerHeight,\n    1,\n    1000\n  );\n\n  camera.position.z = 1;\n  camera.rotation.x = 1.16;\n  camera.rotation.y = -0.12;\n  camera.rotation.z = 0.27;\n  const loadingManager = new THREE.LoadingManager(() => {\n    // document.getElementById(\"FOGBG\").style.display = \"none\";\n  });\n\n  const ambient = new THREE.AmbientLight(0x000000);\n  scene.add(ambient);\n  const directionalLight = new THREE.DirectionalLight(0x1f72e9);\n  directionalLight.position.set(0, 0, 1);\n  scene.add(directionalLight);\n\n  const purple = new THREE.PointLight(0x0c731e, 50, 450, 1.7);\n  purple.position.set(200, 300, 100);\n  scene.add(purple);\n  const blue = new THREE.PointLight(0xa40808, 50, 450, 1.7);\n  blue.position.set(100, 300, 100);\n  scene.add(blue);\n  const green = new THREE.PointLight(0x1e6282, 50, 450, 1.7);\n  green.position.set(300, 300, 200);\n  scene.add(green);\n\n  renderer = new THREE.WebGLRenderer({\n    canvas: document.querySelector(\"#canvas\"),\n  });\n\n  scene.fog = new THREE.FogExp2(bg, 0.001);\n  renderer.setClearColor(scene.fog.color, 0);\n\n\n  const loader = new THREE.TextureLoader(loadingManager);\n  loader.load(Smoke, function (texture) {\n    //  texture is loaded\n    const cloudGeo = new THREE.PlaneBufferGeometry(500, 500);\n    const cloudMaterial = new THREE.MeshLambertMaterial({\n      map: texture,\n      transparent: true,\n    });\n    for (let p = 0; p < 50; p++) {\n      const cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\n      cloud.position.set(\n        Math.random() * 800 - 400,\n        450,\n        Math.random() * 450 - 650\n      );\n      cloud.rotation.x = 1.16;\n      cloud.rotation.y = -0.12;\n      cloud.rotation.z = Math.random() * 2 * Math.PI;\n      cloud.material.opacity = 0.55;\n      cloudParticles.push(cloud);\n      scene.add(cloud);\n    }\n  });\n\n  loader.load(BrickBg, (txture) => {\n    const textureEffect = new PostProcessing.TextureEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      texture: txture,\n    });\n    textureEffect.blendMode.opacity.value = 0.4;\n\n    const bloomEffect = new PostProcessing.BloomEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      kernelSize: PostProcessing.KernelSize.SMALL,\n      useLuminanceFilter: true,\n      luminanceThreshold: 0.3,\n      luminanceSmoothing: 0.75,\n    });\n    bloomEffect.blendMode.opacity.value = 1.5;\n\n    const effectPass = new PostProcessing.EffectPass(\n      camera,\n      bloomEffect,\n      textureEffect\n    );\n    effectPass.renderToScreen = true;\n\n    composer = new PostProcessing.EffectComposer(renderer);\n    composer.addPass(new PostProcessing.RenderPass(scene, camera));\n    composer.addPass(effectPass);\n\n    render();\n  });\n};\n/* eslint-disable no-param-reassign */\nconst render = () => {\n  resizeCanvasToDisplaySize();\n  cloudParticles.forEach((p) => {\n    p.rotation.z -= 0.0015;\n  });\n  composer.render(0.1);\n  requestAnimationFrame(render);\n};\n\nconst Canvas = styled.canvas`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  min-width: 100vw;\n  min-height: 100vh;\n  z-index: -1;\n`;\nconst BG = styled.div`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background: url(${BrickBg});\n  background-size: cover;\n  background-repeat: no-repeat;\n  opacity: 0.5;\n`;\nfunction Nebula() {\n  useEffect(() => {\n    // window.addEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    Init();\n    return () => {\n      //   window.removeEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    };\n  }, []);\n\n  return (\n    <>\n      <Canvas id=\"canvas\" />\n      <BG id=\"FOGBG\" />\n    </>\n  );\n}\n\nexport default Nebula;\n","export default __webpack_public_path__ + \"static/media/smoke.7c256a05.png\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top:5px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  removed,\r\n  totalValueFormated,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(316, 'Stake')}:</Text>\r\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\r\n      </Flex>\r\n      <Flex justifyContent=\"flex-start\">\r\n        <Link external href={bscScanAddress} bold={false}>\r\n          {TranslateString(356, 'View on EtherScan')}\r\n        </Link>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\r\n\r\nconst CoreTag = (props) => (\r\n  <Tag variant=\"secondary\" style={{color:\"#fff\"}} outline startIcon={<VerifiedIcon />} {...props}>\r\n    Core\r\n  </Tag>\r\n)\r\n\r\nconst LockExpiredTag = (props) => (\r\n  <Tag variant=\"secondary\" style={{color:\"#fff\"}} outline startIcon={<VerifiedIcon />} {...props}>\r\n    Soft Unlocked\r\n  </Tag>\r\n)\r\n\r\nconst CommunityTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />} {...props}>\r\n    Community\r\n  </Tag>\r\n)\r\n\r\nconst BinanceTag = (props) => (\r\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />} {...props}>\r\n    Binance\r\n  </Tag>\r\n)\r\n\r\nconst DualTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline {...props}>\r\n    Dual\r\n  </Tag>\r\n)\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, LockExpiredTag }\r\n","import React, { useState } from \"react\";\r\nimport Countdown from \"react-countdown\";\r\nimport styled from \"styled-components\";\r\nimport { Tag, Flex, Heading, Image } from \"@pancakeswap-libs/uikit\";\r\nimport { CommunityTag, CoreTag, LockExpiredTag } from \"components/Tags\";\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string;\r\n  noPenaltyTime?: number;\r\n  farmImage?: string;\r\n  tokenSymbol?: string;\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`;\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`;\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  noPenaltyTime,\r\n  farmImage,\r\n  tokenSymbol,\r\n}) => {\r\n  const [comp, setCompleted] = useState(false);\r\n\r\n  const countdownTimerComplete = Number(new Date()) < noPenaltyTime;\r\n\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image\r\n        src={farmImage}\r\n        alt={tokenSymbol}\r\n        width={64}\r\n        height={64}\r\n      />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {countdownTimerComplete ? (\r\n            <Countdown\r\n              date={noPenaltyTime}\r\n              onMount={({ completed }) => {\r\n                if (completed) {\r\n                  setCompleted(true);\r\n                }\r\n              }}\r\n              onComplete={() => setCompleted(true)}\r\n              // @ts-ignore\r\n              renderer={renderCounter}\r\n            />\r\n          ) : <LockExpiredTag/>}\r\n\r\n          {/* {noPenaltyTime}\r\n          <MultiplierTag variant=\"secondary\">{noPenaltyTime}</MultiplierTag> */}\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default CardHeading;\r\n\r\nconst InfoText = styled.div`\r\ncolor: grey;\r\nfont-size: 12px;\r\n`\r\n\r\nconst renderCounter = (\r\n  { days, hours, minutes, seconds, completed }: any\r\n) => {\r\n  if (completed) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <InfoText>\r\n      Your soft lock expires: {days}d {hours}h {minutes}m {seconds}s\r\n    </InfoText>\r\n  );\r\n};\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Container = styled.div<{ selected?: boolean; locked?: boolean }>`\r\n  cursor: pointer;\r\n  margin: 3px;\r\n  position: relative;\r\n  width: 32%;\r\n  @media only screen and (max-width: 550px) {\r\n    width: 48%;\r\n  }\r\n  border-radius: 10px;\r\n  ${({ selected, theme, locked }) =>\r\n    `border: ${\r\n      selected\r\n        ? `1px solid ${theme.colors.primary} `\r\n        : \"1px solid rgba(255,255,255,0.5)\"\r\n    };\r\n    box-shadow:${\r\n      selected\r\n        ? `0 0 0.5rem ${theme.colors.borderColor}, 0 0 0.5rem ${theme.colors.borderColor}, inset 0 0 0.5rem ${theme.colors.borderColor}`\r\n        : \"none\"\r\n    };\r\n    :hover{\r\n      transform: translateY(-5px);\r\n    };\r\n    ${!!locked && `opacity: 0.3;`}\r\n    `}\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nconst LabelSpace = styled.div`\r\n  padding: 5px;\r\n  height: 30px;\r\n  border-top: 1px solid rgba(255, 255, 255, 0.5);\r\n  color: ${({ theme }) => theme.colors.primary};\r\n  text-align: center;\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst LockedOverlay = styled.span`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0.6;\r\n  font-size: 30px;\r\n  font-weight: 800;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: not-allowed;\r\n  user-select: none;\r\n`;\r\n\r\ninterface NFTContainerProps {\r\n  selected?: boolean;\r\n  locked?: boolean;\r\n  id?: number;\r\n  onClick?: (id: number) => void;\r\n  label?: string;\r\n  img: string;\r\n}\r\n\r\n// TODO make this look like an opensea container or someshit.s\r\nconst NFTContainer: React.FC<NFTContainerProps> = ({\r\n  selected,\r\n  locked,\r\n  id,\r\n  onClick,\r\n  img,\r\n  label\r\n}) => {\r\n  return (\r\n    <Container\r\n      selected={selected}\r\n      locked={locked}\r\n      onClick={() => {\r\n        if (onClick) {\r\n          onClick(id);\r\n        }\r\n      }}\r\n    >\r\n      {locked && <LockedOverlay>Staked</LockedOverlay>}\r\n      <Img src={img} />\r\n      <LabelSpace>{label || `Rappear #${id}`}</LabelSpace>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NFTContainer;\r\n","import BigNumber from \"bignumber.js\";\r\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { Button, Modal, LinkExternal } from \"@pancakeswap-libs/uikit\";\r\nimport ModalActions from \"components/ModalActions\";\r\n\r\nimport { NFTSelection } from \"config/constants/types\";\r\nimport ModalInput from \"components/ModalInput\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport styled from \"styled-components\";\r\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\r\nimport NFTContainer from \"./NFTContainer\";\r\n\r\nconst Disclaimer = styled.div`\r\n  font-size: 12px;\r\n  color: gray;\r\n  text-align: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst ModalBody = styled.div`\r\n  max-height: calc(100vh - 75px);\r\n  overflow-y: hidden;\r\n  max-width: 700px;\r\n  @media only screen and (max-width: 768px) {\r\n    width: 90vw;\r\n    max-width: 500px;\r\n  }\r\n  @media only screen and (min-width: 769px) {\r\n    width: 70vw;\r\n  }\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 50vw;\r\n  }\r\n`;\r\nconst FlexGrid = styled.div`\r\n  display: flex;\r\n  overflow-y: scroll;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  padding: 15px;\r\n  height: 100%;\r\n  max-height: calc(70vh);\r\n`;\r\n\r\ninterface DepositModalProps {\r\n\r\n  onDismiss?: () => void;\r\n  tokenName?: string;\r\n  addLiquidityUrl?: string;\r\n  nfts?: NFTSelection;\r\n  setNfts?: (NFTSelection) => void;\r\n  onConfirmNfts?: () => void;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({\r\n\r\n  onDismiss,\r\n  addLiquidityUrl,\r\n  nfts,\r\n  setNfts,\r\n  onConfirmNfts,\r\n}) => {\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n  const [selectedCount, setSelectedCount] = useState(0);\r\n  const TranslateString = useI18n();\r\n\r\n  const onClick = (id) => {\r\n    const newNftsInWallet = { ...nfts };\r\n    newNftsInWallet[id].selected = !nfts[id].selected;\r\n    setNfts(newNftsInWallet);\r\n    const newSelectedCount = newNftsInWallet[id].selected\r\n      ? selectedCount + 1\r\n      : selectedCount - 1;\r\n    setSelectedCount(newSelectedCount);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={TranslateString(1068, \"Select Rappears to stake\")}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <ModalBody>\r\n        <FlexGrid>\r\n          {Object.values(nfts).map((nft) => (\r\n            <NFTContainer\r\n              key={nft.id}\r\n              id={nft.id}\r\n              img={nft.img}\r\n              locked={nft.locked}\r\n              selected={nft.selected}\r\n              onClick={(id) => {\r\n                if (!nft.locked) {\r\n                  onClick(id);\r\n                }\r\n              }}\r\n            />\r\n          ))}\r\n        </FlexGrid>\r\n        <ModalActions>\r\n          <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n            {TranslateString(462, \"Cancel\")}\r\n          </Button>\r\n          <Button\r\n            width=\"100%\"\r\n            disabled={pendingTx || selectedCount === 0}\r\n            onClick={async () => {\r\n              setPendingTx(true);\r\n              // TODO: Here is where we iterate and find all selected, then make contract call.\r\n              await onConfirmNfts();\r\n              setPendingTx(false);\r\n              onDismiss();\r\n            }}\r\n          >\r\n            {pendingTx\r\n              ? \"Pending Confirmation\"\r\n              : `Stake ${\r\n                  selectedCount ? `(${selectedCount})` : \"Selected\"\r\n                } Rappears`}\r\n          </Button>\r\n        </ModalActions>\r\n        <Disclaimer>\r\n          Your Rappears will be registered for staking rewards. Registration is\r\n          one time and is permanent. Registered NFTs have no restrictions and\r\n          you may continue to hold, transfer or sell your NFT as usual.\r\n        </Disclaimer>\r\n        <br />\r\n        <LinkExternal href={addLiquidityUrl} style={{ margin: \"auto\" }}>\r\n          Nothing in your wallet? Get Rappears Here\r\n        </LinkExternal>\r\n      </ModalBody>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  IconButton,\r\n  AddIcon,\r\n  MinusIcon,\r\n  useModal,\r\n} from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport Logo from \"assets/images/logo.png\";\r\n\r\nimport { fetchPoolsUserDataAsync, fetchRewardPoolAsync } from \"state/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { Address, NFTSelection } from \"config/constants/types\";\r\nimport { useContract } from \"hooks/useContract\";\r\nimport RappearsABI from \"config/abi/rappears.json\";\r\nimport RewardPoolAbi from \"config/abi/rewardPool.json\";\r\nimport rewardPoolByAddress, {\r\n  rappearNftsByAddress,\r\n} from \"config/constants/rewardpool\";\r\n\r\nimport DepositModal from \"../DepositModal\";\r\nimport WithdrawModal from \"../WithdrawModal\";\r\n\r\ninterface FarmV2CardActionsProps {\r\n  tokenBalance?: BigNumber;\r\n  addLiquidityUrl?: string;\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`;\r\n\r\nconst StakeAction: React.FC<FarmV2CardActionsProps> = ({\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const poolContract = useContract(\r\n    RewardPoolAbi,\r\n    getAddress(rewardPoolByAddress),\r\n  );\r\n  const nftContract = useContract(\r\n    RappearsABI,\r\n    getAddress(rappearNftsByAddress),\r\n  );\r\n\r\n  const [isRegisteredNft, setIsRegisteredNft] = useState<NFTSelection>({});\r\n  const [randomNumb, setRandomNum] = useState<number>(0);\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let registeredIds = [];\r\n      if (account) {\r\n        try {\r\n          console.log(\"getting registeredIds\", poolContract);\r\n          registeredIds = await poolContract.methods\r\n            .listRegisteredTokens(account)\r\n            .call();\r\n          console.log(\"registeredIds\", registeredIds);\r\n        } catch (e) {\r\n          console.log(\"error getting reigsted is\", e);\r\n        }\r\n        try {\r\n          const heldIds = await nftContract.methods\r\n            .tokensOfOwner(account)\r\n            .call();\r\n          const nftRegistration = {};\r\n          heldIds.forEach((id) => {\r\n            let img = Logo;\r\n            if (id > 0 && id <= 500) {\r\n              img = `https://galaxyheroes.mypinata.cloud/ipfs/Qmdc5x9bmANS9zSnTqefReaxwxny4fCdUJnQLNHf8My7hQ/${id}.png`;\r\n            }\r\n            if (id > 500 && id <= 1000) {\r\n              img = `https://galaxyheroes.mypinata.cloud/ipfs/Qma1EosqxmbvdK1WPGcXk6ZgGfndwJjQzoBYj254DcGmY8/${id}.png`;\r\n            }\r\n            nftRegistration[id] = {\r\n              id,\r\n              locked: registeredIds.indexOf(id) > -1,\r\n              selected: false,\r\n              img,\r\n            };\r\n          });\r\n          setIsRegisteredNft(nftRegistration);\r\n        } catch (e) {\r\n          console.log(\"error\", e, account);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [poolContract, account, nftContract, randomNumb]);\r\n\r\n  const onConfirmNfts = async () => {\r\n    const nftsToRegister = Object.keys(isRegisteredNft).filter(\r\n      (id) => isRegisteredNft[id].selected,\r\n    );\r\n    console.log(\"registering following\", nftsToRegister);\r\n    await poolContract.methods\r\n      .registerForRewards(nftsToRegister)\r\n      .send({ from: account });\r\n    dispatch(fetchRewardPoolAsync());\r\n    setRandomNum(Math.random());\r\n  };\r\n\r\n  const rawLockedNfts = Object.keys(isRegisteredNft).filter(\r\n    (id) => isRegisteredNft[id].locked,\r\n  );\r\n  const displayBalance = rawLockedNfts.length;\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      addLiquidityUrl={addLiquidityUrl}\r\n      nfts={isRegisteredNft}\r\n      setNfts={setIsRegisteredNft}\r\n      onConfirmNfts={onConfirmNfts}\r\n    />,\r\n  );\r\n\r\n  const renderStakingButtons = () => {\r\n    return displayBalance === 0 ? (\r\n      <Button onClick={onPresentDeposit}>\r\n        {TranslateString(999, \"Stake\")}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={displayBalance === 0 ? \"textDisabled\" : \"text\"}>\r\n        {displayBalance}\r\n      </Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default StakeAction;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Flex, Heading } from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { useContract } from \"hooks/useContract\";\r\nimport RewardPoolAbi from \"config/abi/rewardPool.json\";\r\nimport rewardPoolByAddress, {\r\n} from \"config/constants/rewardpool\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\n\r\nconst ButtonText = styled.div`\r\n  :after {\r\n    content: \"\";\r\n    font-size: 10px;\r\n    font-weight: 300;\r\n    display: block;\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n  white-space: pre;\r\n  position: relative;\r\n`;\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber;\r\n  farmAddress: string;\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = () => {\r\n  const { account } = useWeb3React();\r\n  const TranslateString = useI18n();\r\n\r\n  const poolContract = useContract(\r\n    RewardPoolAbi,\r\n    getAddress(rewardPoolByAddress),\r\n  );\r\n  const [randomNumb, setRandomNum] = useState<number>(0);\r\n  const [harvestableEarnings, setHarvestableEarnings] = useState((0));\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let totalAmount = 0;\r\n      if (account) {\r\n        try {\r\n          console.log(\"getting totalAMount\", poolContract);\r\n          totalAmount = await poolContract.methods\r\n            .calcHarvestTotForUser(account)\r\n            .call();\r\n          setHarvestableEarnings(Number(totalAmount) / 1e18);\r\n          console.log(\"registeredIds\", totalAmount);\r\n        } catch (e) {\r\n          console.log(\"error getting reigsted is\", e);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [poolContract, account, randomNumb]);\r\n\r\n\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n\r\n  const displayBalance = harvestableEarnings ? harvestableEarnings.toFixed(3) : harvestableEarnings\r\n\r\n  const onConfirmHarvest = async () => {\r\n    await poolContract.methods\r\n      .harvestRewards()\r\n      .send({ from: account });\r\n    setRandomNum(Math.random());\r\n  };\r\n\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={harvestableEarnings === 0 ? \"textDisabled\" : \"text\"}>\r\n        {displayBalance}\r\n      </Heading>\r\n      <Button\r\n        style={{ minWidth: 200 }}\r\n        disabled={harvestableEarnings === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true);\r\n          await onConfirmHarvest();\r\n          setPendingTx(false);\r\n        }}\r\n      >\r\n        <ButtonText>{pendingTx ? \"Pending...\" : \"Harvest\"}</ButtonText>\r\n      </Button>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default HarvestAction;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled from \"styled-components\";\r\nimport { provider as ProviderType } from \"web3-core\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { getBep20Contract, getFarmV2Contract } from \"utils/contractHelpers\";\r\nimport { Button, Flex, Text } from \"@pancakeswap-libs/uikit\";\r\nimport { FarmV2 } from \"state/types\";\r\nimport { useFarmV2FromSymbol, useFarmV2User } from \"state/hooks\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport useWeb3 from \"hooks/useWeb3\";\r\nimport ConnectWalletButton from \"components/ConnectWalletButton\";\r\nimport StakeAction from \"./StakeAction\";\r\nimport HarvestAction from \"./HarvestAction\";\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`;\r\nexport interface FarmV2WithStakedValue extends FarmV2 {\r\n  apy?: BigNumber;\r\n}\r\n\r\ninterface FarmV2CardActionsProps {\r\n  // farm: FarmV2WithStakedValue;\r\n  provider?: ProviderType;\r\n  account?: string;\r\n  addLiquidityUrl?: string;\r\n  isRegisteredNft?: any;\r\n}\r\n\r\nconst CardActions: React.FC<FarmV2CardActionsProps> = ({\r\n  // farm,\r\n  account,\r\n  addLiquidityUrl,\r\n  isRegisteredNft\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const [requestedApproval, setRequestedApproval] = useState(false);\r\n\r\n  const web3 = useWeb3();\r\n\r\n\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text\r\n          bold\r\n          textTransform=\"uppercase\"\r\n          color=\"secondary\"\r\n          fontSize=\"12px\"\r\n          pr=\"3px\"\r\n        >\r\n          YOUR ETH EARNINGS\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction\r\n        earnings={new BigNumber(0)}\r\n        farmAddress='0x000000'\r\n      />\r\n      <Flex>\r\n        <Text\r\n          bold\r\n          textTransform=\"uppercase\"\r\n          color=\"secondary\"\r\n          fontSize=\"12px\"\r\n          pr=\"3px\"\r\n        >\r\n          RAPPEARS STAKED\r\n        </Text>\r\n      </Flex>\r\n      {!account ? (\r\n        <ConnectWalletButton mt=\"8px\" width=\"100%\" />\r\n      ) : (\r\n        <StakeAction\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      )}\r\n    </Action>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Flex, Text, Skeleton } from \"@pancakeswap-libs/uikit\";\r\n\r\nimport { FarmV2 } from \"state/types\";\r\nimport { useRewardPool } from \"state/hooks\";\r\nimport { provider as ProviderType } from \"web3-core\";\r\nimport Logo from \"assets/images/logo.png\";\r\nimport Card from \"components/custom/Card\";\r\nimport ExpandableSectionButton from \"components/ExpandableSectionButton\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport rewardPoolByAddress from \"config/constants/rewardpool\";\r\n\r\nimport DetailsSection from \"./DetailsSection\";\r\nimport CardHeading from \"./CardHeading\";\r\nimport CardActionsContainer from \"./CardActionsContainer\";\r\n\r\n\r\nexport interface FarmV2WithStakedValue extends FarmV2 {\r\n  apy?: BigNumber;\r\n  liquidity?: BigNumber;\r\n}\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 13px auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? \"100%\" : \"0px\")};\r\n  overflow: hidden;\r\n`;\r\n\r\ninterface FarmV2CardProps {\r\n  cakePrice?: BigNumber;\r\n  bnbPrice?: BigNumber;\r\n  provider?: ProviderType;\r\n  account?: string;\r\n}\r\n\r\nconst FarmCard: React.FC<FarmV2CardProps> = ({\r\n  cakePrice,\r\n  bnbPrice,\r\n  account,\r\n}) => {\r\n  const rewardPool = useRewardPool();\r\n\r\n  const {\r\n    rewardsPaidOut = 0,\r\n    treasuryHoldings = 0,\r\n    registeredNfts = 0,\r\n  } = rewardPool;\r\n\r\n  const rewardsDisplay = new BigNumber(rewardsPaidOut.toString())\r\n    .dividedBy(1e18)\r\n    .toFixed(2);\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false);\r\n\r\n  const chainId = process.env.REACT_APP_CHAIN_ID;\r\n  const addLiquidityUrl = \"https://opensea.io/rappearsnftmusicdao\";\r\n\r\n  return (\r\n    <Card animate style={{ padding: 15 }}>\r\n      {/* <StyledCardAccent /> */}\r\n      <CardHeading\r\n        lpLabel=\"RappearsNFTs\"\r\n        noPenaltyTime={1209600}\r\n        farmImage={Logo}\r\n        tokenSymbol=\"RAPPEAR\"\r\n      />\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text>Total NFTs Registered:</Text>\r\n        <Text bold style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          {registeredNfts.toString() ? (\r\n            <>{(Number(registeredNfts)/100).toFixed(0)} RAPPEARS</>\r\n          ) : (\r\n            <Skeleton height={24} width={80} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>Total Earnings:</Text>\r\n        <Text bold>\r\n          {rewardsDisplay ? (\r\n            <>{rewardsDisplay} ETH</>\r\n          ) : (\r\n            <Skeleton height={24} width={80} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n      <CardActionsContainer\r\n        account={account}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          bscScanAddress={`https://etherscan.com/address/${getAddress(rewardPoolByAddress)}`} // TODO CHANGE THIS\r\n          lpLabel=\"RAPPEARS\"\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FarmCard;\r\n","import React, { useEffect, useCallback, useState, Suspense, lazy } from \"react\";\r\nimport { Route, useRouteMatch, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { Image, RowType, Toggle, Text } from \"@pancakeswap-libs/uikit\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { BLOCKS_PER_YEAR, CAKE_POOL_PID } from \"config\";\r\nimport FlexLayout from \"components/layout/Flex\";\r\nimport Page from \"components/layout/Page\";\r\nimport {\r\n  useFarmsV2,\r\n  usePriceBnbBusd,\r\n  usePriceX2PBusd,\r\n  usePriceCakeBusd,\r\n} from \"state/hooks\";\r\nimport useRefresh from \"hooks/useRefresh\";\r\n\r\nimport { QuoteToken } from \"config/constants/types\";\r\nimport Heading from \"components/custom/Heading\";\r\nimport { FarmV2 } from \"state/types\";\r\nimport TitleBox from \"./Heading\";\r\nimport Nebula from \"./Nebula\";\r\n\r\nimport FarmCard, {\r\n  FarmV2WithStakedValue,\r\n} from \"./components/FarmCard/FarmCard\";\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n  }\r\n`;\r\n\r\nconst Hero = styled.div`\r\n  position: relative;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 85%;\r\n  padding: 18px 0 10px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  @media (min-width: 576px) {\r\n    flex-direction: row;\r\n    margin: 0;\r\n    max-width: none;\r\n    padding: 48px 0;\r\n  }\r\n  ul {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst HelpLabel = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #fff;\r\n  text-shadow: 0 0 0.1em ${({ theme }) => theme.colors.borderColor},\r\n    0 0 0.2em ${({ theme }) => theme.colors.borderColor},\r\n    0 0 0.4em ${({ theme }) => theme.colors.borderColor},\r\n    0 0 0.8em ${({ theme }) => theme.colors.borderColor},\r\n    0 0 1.6em ${({ theme }) => theme.colors.borderColor};\r\n`;\r\n\r\nconst animateLightBar = keyframes`\r\n\t0%,5% {\r\n\t\ttransform: scaleX(0) ;\r\n\t}\r\n    50%{\r\n        transform: scaleX(1) ;\r\n    }\r\n\t60% {\r\n        transform: scaleX(1) ;\r\n\t}\r\n  100% {\r\n        transform: scaleX(0.8) ;\r\n\t}\r\n`;\r\n\r\nconst LightBar = styled.div`\r\n  position: relative;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  height: 3px;\r\n  border-radius: 10px;\r\n  background-color: #fff;\r\n  z-index: 2;\r\n  opacity: 0.8;\r\n  box-shadow: 0 0 12px #04d9ff, 0 0 20px #04d9ff, 0 0 40px #04d9ff,\r\n    0 0 80px #04d9ff, 0 0 120px #04d9ff;\r\n  animation: ${animateLightBar} 1s linear forwards;\r\n`;\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch();\r\n  const farmsLP = useFarmsV2();\r\n  const cakePrice = usePriceCakeBusd();\r\n  const x2pPrice = usePriceX2PBusd();\r\n  const bnbPrice = usePriceBnbBusd();\r\n  const { account } = useWeb3React();\r\n\r\n  const dispatch = useDispatch();\r\n  const { fastRefresh } = useRefresh();\r\n  useEffect(() => {\r\n    if (account) {\r\n      // dispatch(fetchFarmV2UserDataAsync(account));\r\n    }\r\n  }, [account, dispatch, fastRefresh]);\r\n\r\n  const activeFarms = farmsLP;\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay): FarmV2WithStakedValue[] => {\r\n      const cakePriceVsBNB = new BigNumber(cakePrice.div(bnbPrice));\r\n      const farmsToDisplayWithAPY: FarmV2WithStakedValue[] = farmsToDisplay.map(\r\n        (farm: FarmV2, index: number) => {\r\n          if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\r\n            return farm;\r\n          }\r\n\r\n          const cakeRewardPerBlock = new BigNumber(farm.rewardTokenPerBlock);\r\n          const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR);\r\n\r\n          // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\r\n          const lpTotalInQuoteToken = new BigNumber(farm.lpTotalInQuoteToken);\r\n\r\n          let apy = cakePriceVsBNB\r\n            .times(cakeRewardPerYear)\r\n            .div(lpTotalInQuoteToken);\r\n\r\n          if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            // Regular TREASURE farms\r\n            apy = cakeRewardPerYear.div(farm.lpTokenBalanceMC);\r\n          } else {\r\n            // LP Farms\r\n            apy = cakeRewardPerYear\r\n              .times(cakePrice)\r\n              .div(lpTotalInQuoteToken.times(bnbPrice));\r\n          }\r\n\r\n          let liquidity = farm.lpTotalInQuoteToken;\r\n\r\n          if (!farm.lpTotalInQuoteToken) {\r\n            liquidity = null;\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n            liquidity = bnbPrice.times(farm.lpTotalInQuoteToken);\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            liquidity = cakePrice.times(farm.lpTokenBalanceMC);\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.X2P) {\r\n            liquidity = x2pPrice.times(farm.lpTokenBalanceMC);\r\n          }\r\n\r\n          return { ...farm, apy, liquidity };\r\n        },\r\n      );\r\n\r\n      return farmsToDisplayWithAPY;\r\n    },\r\n    [bnbPrice, cakePrice, x2pPrice],\r\n  );\r\n\r\n  const farmsStaked = farmsList(activeFarms);\r\n\r\n  const renderEarnBoxes = (): JSX.Element => {\r\n    return (\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <FlexLayout>\r\n          <FarmCard\r\n            bnbPrice={bnbPrice}\r\n            cakePrice={cakePrice}\r\n            account={account}\r\n          />\r\n        </FlexLayout>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nebula />\r\n      <Hero>\r\n        <div>\r\n          <TitleBox />\r\n        </div>\r\n      </Hero>\r\n      <Page style={{ position: \"relative\" }}>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleWrapper />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper />\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          <Heading size=\"xl\"> Earn </Heading>\r\n          <br />\r\n          <LightBar />\r\n        </div>\r\n        {renderEarnBoxes()}\r\n        <HelpLabel>\r\n          <a target=\"_blank\" rel=\"noreferrer\" href=\"http://discord.gg/rappears\">\r\n            Need help with staking Rappears? <u>Visit us in Discord</u>\r\n          </a>\r\n          <br />\r\n        </HelpLabel>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Farms;\r\n","import React from \"react\";\nimport { Heading } from \"@pancakeswap-libs/uikit\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\n\nconst Heading1 = styled(Heading)`\n  text-shadow: 0 0 0.2em #ff3333, 0 0 0.3em #ff3333, 0 0 0.5em #ff3333,\n    0 0 8.8em #ff3333, 0 0 8.6em #ff3333;\n`;\n\nexport default Heading1;\n","import React from \"react\";\nimport { Card } from \"@pancakeswap-libs/uikit\";\nimport styled, { keyframes, css } from \"styled-components\";\n\nconst pulse = ({theme}) => keyframes`\n  0% {\n    box-shadow: 0 0 1rem ${theme.colors.borderColor}, 0 0 1rem ${theme.colors.borderColor}, inset 0 0 2rem 0 ${theme.colors.borderColor};\n  }\n  50% {\n    box-shadow: 0 0 4rem ${theme.colors.borderColor}, 0 0 2rem ${theme.colors.borderColor}, inset 0 0 4.5rem 0 ${theme.colors.borderColor};\n  }\n  100% {\n    box-shadow: 0 0 1rem ${theme.colors.borderColor}), 0 0 1rem $${theme.colors.borderColor},inset 0 0 2rem 0 ${theme.colors.borderColor};\n  }\n`;\n\nconst Card1 = styled(Card)<{ animate?: boolean }>`\n  animation: ${({ animate }) => (animate ? css`${pulse} 1s 1s infinite ` : \"none\")};\n  background: #ff333310;\n  backdrop-filter: blur(2px);\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\n  box-shadow: 0 0 2rem ${({ theme }) => theme.colors.borderColor},\n    0 0 2rem ${({ theme }) => theme.colors.borderColor},\n    inset 0 0 2rem ${({ theme }) => theme.colors.borderColor};\n`;\n\nexport default Card1;\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: 60vh;\r\n  max-height: 120vh;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getContract,\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n\r\nexport const useContract = (abi: any, address: any) =>{\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getContract(abi, address, web3), [abi, address, web3])\r\n}","export default __webpack_public_path__ + \"static/media/brickBg.ee97b925.jpg\";"],"sourceRoot":""}