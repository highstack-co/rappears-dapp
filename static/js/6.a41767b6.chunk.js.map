{"version":3,"sources":["views/Home/components/CardValue.tsx","views/Home/components/WalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","utils/formatBalance.ts","views/Home/components/CakeStats.tsx","hooks/useTokenBalance.ts","views/Home/components/TotalValueLockedCard.tsx","views/Home/components/PublicBalance.tsx","views/Home/components/EarnAPYCard.tsx","components/custom/Sprites.tsx","components/custom/Landing.tsx","views/Home/Home.tsx","components/custom/Heading.tsx","components/custom/Card.tsx","hooks/useWeb3.ts","components/layout/Container.tsx","components/layout/Page.tsx","hooks/useContract.ts","assets/images/brickBg.jpg"],"names":["CardValue","value","decimals","inline","fontSize","lineHeight","prefix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","useEffect","current","style","display","WalletBalance","balance","useWeb3React","account","Number","StyledFarmStakingCard","styled","Card","Logo","Block","div","Label","theme","colors","textSubtle","Actions","FarmedStakingCard","useState","pendingTx","TranslateString","useI18n","poolContract","useContract","RewardPoolAbi","getAddress","rewardPoolByAddress","nftContract","RappearsABI","rappearNftsByAddress","randomNumb","harvestableEarnings","setHarvestableEarnings","registeredIds","setRegisteredIds","heldIds","setHeldIds","fetchData","a","totalAmount","console","log","methods","calcHarvestTotForUser","call","listRegisteredTokens","registeredIdsCount","length","tokensOfOwner","heldIdsCount","Heading","size","mb","ml","to","id","width","ConnectWalletButton","getBalanceNumber","displayBalance","BigNumber","dividedBy","pow","toNumber","StyledCakeStats","Row","CakeStats","totalSupply","slowRefresh","useRefresh","setTotalSupply","cakeContract","getCakeContract","supply","fetchTotalSupply","useTotalSupply","burnedBalance","tokenAddress","setBalance","web3","useWeb3","fetchBalance","contract","getBep20Contract","balanceOf","res","useBurnedBalance","getCakeAddress","cakeSupply","useFarmCakePerBlock","flex","textAlign","StyledTotalValueLockedCard","TotalValueLockedCard","rewardPool","useRewardPool","registeredNfts","setRegisteredNfts","displayRegisteredNfts","isNaN","setTimeout","fontWeight","mt","height","PublicBalance","mediaQueries","lg","CardMidContent","Text","attrs","EthLabel","EarnAPYCard","usePriceBnbBusd","rewardsPaidOut","treasuryHoldings","treasuryDisplay","toString","multipliedBy","toFixed","rewardsDisplay","animation","variant","Container","Confetti","options","particles","number","shape","type","opacity","enable","minimumValue","speed","startValue","destroy","random","links","life","sync","count","move","gravity","acceleration","min","max","decay","direction","straight","outModes","default","top","rotate","tilt","roll","darken","wobble","distance","emitters","delay","rate","quantity","animateLightBar","keyframes","TextBoxAnimation","TextAnimation","BorderShow","Wrapper","TextBox","H1","h1","LightBar","Landing","videoPlayed","setVideoPlayed","imageLoading","PageLoader","Page","BrickBg","CTACards","BaseLayout","sm","Flex","Home","padding","FarmStakingCard","Heading1","pulse","borderColor","Card1","animate","css","library","refEth","Web3","getWeb3NoAccount","setweb3","abi","address","useMemo","getContract"],"mappings":"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","file":"static/js/6.a41767b6.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport { useCountUp } from \"react-countup\";\r\nimport { Text } from \"@pancakeswap-libs/uikit\";\r\n\r\nexport interface CardValueProps {\r\n  value: number;\r\n  decimals?: number;\r\n  inline?: boolean;\r\n  fontSize?: string;\r\n  lineHeight?: string;\r\n  prefix?: string;\r\n  bold?: boolean;\r\n  color?: string;\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  inline,\r\n  fontSize = \"40px\",\r\n  lineHeight = \"1\",\r\n  prefix = \"\",\r\n  bold = true,\r\n  color = \"text\",\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: \",\",\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 2,\r\n  });\r\n\r\n  const updateValue = useRef(update);\r\n\r\n  useEffect(() => {\r\n    \r\n    updateValue.current(value);\r\n  }, [value, updateValue]);\r\n\r\n  return (\r\n    <Text\r\n      style={{ lineHeight, display: inline ? \"inline\" : \"block\" }}\r\n      bold={bold}\r\n      fontSize={fontSize}\r\n      color={color}\r\n    >\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default CardValue;\r\n","import React from \"react\";\r\nimport { Text } from \"@pancakeswap-libs/uikit\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport useTokenBalance from \"hooks/useTokenBalance\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getCakeAddress } from \"utils/addressHelpers\";\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { usePriceCakeBusd } from \"state/hooks\";\r\nimport { BigNumber } from \"bignumber.js\";\r\nimport CardValue from \"./CardValue\";\r\nimport CardBusdValue from \"./CardBusdValue\";\r\n\r\nconst WalletBalance = ({\r\n  balance,\r\n  prefix,\r\n  decimals,\r\n}: {\r\n  balance: string | number;\r\n  prefix?: string;\r\n  decimals?: number;\r\n  \r\n}) => {\r\n\r\n  const { account } = useWeb3React();\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: \"54px\" }}>\r\n        Connect wallet to view\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CardValue\r\n        value={Number(balance)}\r\n        decimals={decimals}\r\n        fontSize=\"24px\"\r\n        lineHeight=\"36px\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WalletBalance;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Gears from \"assets/images/gears.png\";\r\nimport Logo from \"assets/images/logo.png\";\r\n\r\nimport { CardBody, Button } from \"@pancakeswap-libs/uikit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContract } from \"hooks/useContract\";\r\nimport RappearsABI from \"config/abi/rappears.json\";\r\nimport RewardPoolAbi from \"config/abi/rewardPool.json\";\r\nimport rewardPoolByAddress, {\r\n  rappearNftsByAddress,\r\n} from \"config/constants/rewardpool\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport useI18n from \"hooks/useI18n\";\r\n// import { useAllHarvest } from \"hooks/useHarvest\";\r\n// import useFarmsWithBalance from \"hooks/useFarmsWithBalance\";\r\nimport ConnectWalletButton from \"components/ConnectWalletButton\";\r\nimport Heading from \"components/custom/Heading\";\r\nimport Card from \"components/custom/Card\";\r\nimport CakeHarvestBalance from \"./CakeHarvestBalance\";\r\nimport CardValue from \"./CardValue\";\r\nimport CakeWalletBalance from \"./CakeWalletBalance\";\r\nimport WalletBalance from \"./WalletBalance\";\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: url(${Logo});\r\n  background-repeat: no-repeat;\r\n  background-size: 30%;\r\n  background-position: 80% 50%;\r\n  min-height: 376px;\r\n`;\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`;\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n  const { account } = useWeb3React();\r\n  const TranslateString = useI18n();\r\n\r\n  const poolContract = useContract(\r\n    RewardPoolAbi,\r\n    getAddress(rewardPoolByAddress),\r\n  );\r\n  const nftContract = useContract(\r\n    RappearsABI,\r\n    getAddress(rappearNftsByAddress),\r\n  );\r\n\r\n  const [randomNumb, setRandomNum] = useState<number>(0);\r\n  const [harvestableEarnings, setHarvestableEarnings] = useState(0);\r\n  const [registeredIds, setRegisteredIds] = useState(0);\r\n  const [heldIds, setHeldIds] = useState(0);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      let totalAmount = 0;\r\n      if (account) {\r\n        try {\r\n          console.log(\"getting totalAMount\", poolContract);\r\n          totalAmount = await poolContract.methods\r\n            .calcHarvestTotForUser(account)\r\n            .call();\r\n          setHarvestableEarnings(Number(totalAmount) / 1e18);\r\n          console.log(\"registeredIds\", totalAmount);\r\n        } catch (e) {\r\n          console.log(\"error getting reigsted is\", e);\r\n        }\r\n        try {\r\n          const registeredIdsCount = (\r\n            await poolContract.methods.listRegisteredTokens(account).call()\r\n          ).length;\r\n\r\n          const heldIdsCount = (\r\n            await nftContract.methods.tokensOfOwner(account).call()\r\n          ).length;\r\n          setHeldIds(heldIdsCount);\r\n          setRegisteredIds(registeredIdsCount);\r\n        } catch (e) {\r\n          console.log(\"error\", e, account);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [poolContract, account, randomNumb, nftContract]);\r\n\r\n  // const farmsWithBalance = useFarmsWithBalance();\r\n  // const balancesWithValue = farmsWithBalance.filter(\r\n  //   (balanceType) => balanceType.balance.toNumber() > 0,\r\n  // );\r\n\r\n  // const { onReward } = useAllHarvest(\r\n  //   balancesWithValue.map((farmWithBalance) => farmWithBalance.pid),\r\n  // );\r\n\r\n  // const harvestAllFarms = useCallback(async () => {\r\n  //   setPendingTx(true);\r\n  //   try {\r\n  //     await onReward();\r\n  //   } catch (error) {\r\n  //     // TODO: find a way to handle when the user rejects transaction or it fails\r\n  //   } finally {\r\n  //     setPendingTx(false);\r\n  //   }\r\n  // }, [onReward]);\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"10px\">\r\n          Your Earnings\r\n        </Heading>\r\n        <Heading color=\"rgba(255,255,255,0.8)\" size=\"md\" mb=\"24px\" ml=\"5px\">\r\n          Locked rappears earn royalties as ETH\r\n        </Heading>\r\n        <Block>\r\n          <Label>{TranslateString(546, \"RAPPEARS in Wallet\")}:</Label>\r\n          <WalletBalance balance={heldIds} decimals={0} />\r\n        </Block>\r\n        <Block>\r\n          <Label>Your RAPPEARS registered:</Label>\r\n          <WalletBalance balance={registeredIds} decimals={0} />\r\n        </Block>\r\n        <Block>\r\n          <Label>{TranslateString(544, \"Royalties to Harvest\")}:</Label>\r\n          <WalletBalance balance={harvestableEarnings} decimals={0} />\r\n        </Block>\r\n\r\n        <Actions>\r\n          {account ? (\r\n            <Link to=\"/farms\">\r\n              <Button\r\n                id=\"harvest-all\"\r\n                // disabled={balancesWithValue.length <= 0 || pendingTx}\r\n                // onClick={harvestAllFarms}\r\n                width=\"100%\"\r\n              >\r\n                {pendingTx\r\n                  ? TranslateString(548, \"Collecting Royalties\")\r\n                  : TranslateString(532, `Claim Royalties`)}\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <ConnectWalletButton width=\"100%\" />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  );\r\n};\r\n\r\nexport default FarmedStakingCard;\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import React from \"react\";\r\nimport { CardBody, Text } from \"@pancakeswap-libs/uikit\";\r\nimport styled from \"styled-components\";\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { useTotalSupply, useBurnedBalance } from \"hooks/useTokenBalance\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getCakeAddress } from \"utils/addressHelpers\";\r\nimport { useFarmCakePerBlock } from \"state/hooks\";\r\nimport Card from \"components/custom/Card\";\r\nimport Heading from \"components/custom/Heading\";\r\nimport CardValue from \"./CardValue\";\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 0px;\r\n`;\r\n\r\nconst CakeStats = () => {\r\n  const TranslateString = useI18n();\r\n  const totalSupply = useTotalSupply();\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()));\r\n  const cakeSupply = totalSupply\r\n    ? getBalanceNumber(totalSupply) - burnedBalance\r\n    : 0;\r\n  const rewardPerBlock = useFarmCakePerBlock();\r\n  return (\r\n    <StyledCakeStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          DAO Voting &#38; Proposals\r\n        </Heading>\r\n        <Row>\r\n          <Text style={{ flex: 3 }} fontSize=\"20px\">\r\n            Coming Soon........\r\n          </Text>\r\n          <div style={{ flex: 1, textAlign: \"right\" }}>\r\n            {cakeSupply ? <CardValue fontSize=\"14px\" value={0} /> : 0}\r\n          </div>\r\n          <hr />\r\n        </Row>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          Current Proposal\r\n        </Text>\r\n        <br />\r\n      </CardBody>\r\n    </StyledCakeStats>\r\n  );\r\n};\r\n\r\nexport default CakeStats;\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      // TOBY TODO FIX THIS\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n    // TOBY TODO FIX THIS\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n    // TOBY TODO FIX THIS\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React, {useEffect, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { CardBody, Skeleton, Text } from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { usePriceBnbBusd, useRewardPool } from \"state/hooks\";\r\nimport Card from \"components/custom/Card\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\nimport Heading from \"components/custom/Heading\";\r\nimport CardValue from \"./CardValue\";\r\n\r\nconst StyledTotalValueLockedCard = styled(Card)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nconst TotalValueLockedCard = () => {\r\n  const rewardPool = useRewardPool();\r\n  \r\n  const [registeredNfts, setRegisteredNfts] = useState(0);\r\n\r\n  useEffect(()=>{\r\n    const displayRegisteredNfts = Number(rewardPool.registeredNfts) / 100;\r\n    if (!Number.isNaN(displayRegisteredNfts)) {\r\n      setTimeout(()=>{\r\n        setRegisteredNfts(displayRegisteredNfts || 0)\r\n        console.log('setting', displayRegisteredNfts)\r\n      }, 1000)  \r\n    }\r\n    \r\n    \r\n  },[rewardPool.registeredNfts])\r\n\r\n  return (\r\n    <StyledTotalValueLockedCard>\r\n      <CardBody>\r\n        <Text fontWeight={800} fontSize=\"24px\" mb=\"14px\">\r\n          Project Statistics\r\n        </Text>\r\n        {registeredNfts !== 0 ? (\r\n          <>\r\n            <Heading size=\"xl\">\r\n              <CardValue value={registeredNfts} decimals={0} />\r\n            </Heading>\r\n            <Text ml=\"5px\" mt=\"5px\" color=\"textSubtle\">\r\n              Rappears Staked\r\n            </Text>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Skeleton height={66} />\r\n          </>\r\n        )}\r\n      </CardBody>\r\n    </StyledTotalValueLockedCard>\r\n  );\r\n};\r\n\r\nexport default TotalValueLockedCard;\r\n","import React from \"react\";\r\nimport { Text } from \"@pancakeswap-libs/uikit\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { usePriceCakeBusd } from \"state/hooks\";\r\nimport styled from \"styled-components\";\r\nimport CardValue from \"./CardValue\";\r\nimport CardBusdValue from \"./CardBusdValue\";\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 24px;\r\n}\r\n`;\r\n\r\nconst PublicBalance = ({\r\n  balance,\r\n  prefix,\r\n  decimals,\r\n}: {\r\n  balance: string;\r\n  prefix?: string;\r\n  decimals?: number;\r\n}) => {\r\n  if (!balance) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: \"50px\" }}>\r\n        Loading...\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Block>\r\n      <CardValue\r\n        prefix={prefix}\r\n        decimals={decimals}\r\n        value={Number(balance)}\r\n        lineHeight=\"1.5\"\r\n      />\r\n      {/* <CardBusdValue value={earningsBusd} /> */}\r\n    </Block>\r\n  );\r\n};\r\n\r\nexport default PublicBalance;\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { CardBody, Text, Skeleton } from \"@pancakeswap-libs/uikit\";\r\nimport Heading from \"components/custom/Heading\";\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport { usePriceBnbBusd, useRewardPool } from \"state/hooks\";\r\nimport Card from \"components/custom/Card\";\r\n// import Gears from \"assets/images/gears.png\";\r\nimport PublicBalance from \"./PublicBalance\";\r\nimport CardValue from \"./CardValue\";\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  background-size: 45%;\r\n  background-position: 85% 50%;\r\n  background-repeat: no-repeat;\r\n\r\n  @media only screen and (min-width: 792px) {\r\n    background-size: 50%;\r\n    background-position: 45% 70%;\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`;\r\nconst CardMidContent = styled(Text).attrs({ fontSize: \"45px\" })`\r\n  line-height: 44px;\r\n  font-weight: 800;\r\n  display: inline-block;\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`;\r\n\r\nconst EthLabel = styled.div`\r\n  font-size: 15px;\r\n  font-weight: 200;\r\n  color: white;\r\n`;\r\n\r\nconst EarnAPYCard = () => {\r\n  const rewardPool = useRewardPool();\r\n  const bnbPrice = usePriceBnbBusd();\r\n\r\n  console.log(\"rewardPool\", rewardPool);\r\n\r\n  const { rewardsPaidOut = 0, treasuryHoldings = 0 } = rewardPool;\r\n\r\n  const treasuryDisplay = new BigNumber(treasuryHoldings.toString())\r\n    .multipliedBy(3000)\r\n    .dividedBy(1e18)\r\n    .toFixed(2);\r\n\r\n  const rewardsDisplay = new BigNumber(rewardsPaidOut.toString())\r\n    .multipliedBy(3000)\r\n    .dividedBy(1e18)\r\n    .toFixed(2);\r\n\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"10px\">\r\n          DAO Stats\r\n        </Heading>\r\n        <Text color=\"contrast\" fontWeight={800} fontSize=\"25px\" mb=\"5px\">\r\n          Rappear holders have earned\r\n        </Text>\r\n        <CardMidContent color=\"#79ff4e\">\r\n          {rewardsPaidOut ? (\r\n            <>\r\n              US$\r\n              <CardValue\r\n                fontSize=\"45px\"\r\n                color=\"#79ff4e\"\r\n                inline\r\n                lineHeight=\"0.8\"\r\n                value={Number(rewardsDisplay)}\r\n              />\r\n              <EthLabel>{(Number(rewardsDisplay) / 3000).toFixed(4)} ETH</EthLabel>\r\n            </>\r\n          ) : (\r\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\r\n          )}\r\n        </CardMidContent>\r\n\r\n        <Text\r\n          color=\"contrast\"\r\n          fontWeight={800}\r\n          fontSize=\"25px\"\r\n          mt=\"5px\"\r\n          mb=\"25px\"\r\n        >\r\n          through music and trade royalties\r\n        </Text>\r\n        <Label>Treasury Holdings (US$ Value)</Label>\r\n        <PublicBalance prefix=\"$\" balance={`${treasuryDisplay}`} />\r\n        <Label>Number of Music (tracks) generating royalties</Label>\r\n        <PublicBalance balance=\"0\" decimals={0} />\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  );\r\n};\r\n\r\nexport default EarnAPYCard;\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Particles from \"react-tsparticles\";\nimport HexBg from \"assets/images/hexBg.png\";\nimport BrickBg from \"assets/images/brickBg.jpg\";\nimport Logo from \"assets/images/logo.png\";\n\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  z-index: 0;\n  transition: opacity 0.3s ease;\n`;\n\n// function FloatingPears() {\n//   return (\n//     <>\n//       <Container>\n//         <Particles\n//           id=\"tsparticles\"\n//           options={{\n//             fullScreen: {\n//               enable: true,\n//             },\n//             fpsLimit: 60,\n//             particles: {\n//               groups: {\n//                 z5000: {\n//                   number: {\n//                     value: 70,\n//                   },\n//                   zIndex: {\n//                     value: 50,\n//                   },\n//                 },\n//                 z7500: {\n//                   number: {\n//                     value: 30,\n//                   },\n//                   zIndex: {\n//                     value: 75,\n//                   },\n//                 },\n//                 z2500: {\n//                   number: {\n//                     value: 50,\n//                   },\n//                   zIndex: {\n//                     value: 25,\n//                   },\n//                 },\n//                 z1000: {\n//                   number: {\n//                     value: 40,\n//                   },\n//                   zIndex: {\n//                     value: 100,\n//                   },\n//                 },\n//               },\n//               number: {\n//                 value: 200,\n//                 density: {\n//                   enable: false,\n//                   value_area: 800,\n//                 },\n//               },\n//               color: {\n//                 value: \"#ffdf88\",\n//                 animation: {\n//                   enable: false,\n//                   speed: 20,\n//                   sync: true,\n//                 },\n//               },\n//               rotate: {\n//                 direction: \"random\",\n//                 value: {\n//                   min: 0,\n//                   max: 360,\n//                 },\n//                 animation: {\n//                   enable: true,\n//                   speed: 10,\n//                   sync: true,\n//                 },\n//               },\n//               shape: {\n//                 type: \"image\",\n//                 options: {\n//                   images: [{ src: Logo }, { src: TreasureCoin }],\n//                 },\n//               },\n//               opacity: {\n//                 value: 1,\n//                 random: false,\n//                 animation: {\n//                   enable: false,\n//                   speed: 3,\n//                   minimumValue: 0.1,\n//                   sync: false,\n//                 },\n//               },\n//               size: {\n//                 value: 30,\n//               },\n//               move: {\n//                 angle: {\n//                   value: 10,\n//                   offset: 0,\n//                 },\n//                 enable: true,\n//                 speed: 5,\n//                 direction: \"top\",\n//                 random: false,\n//                 straight: false,\n//                 outModes: {\n//                   default: \"out\",\n//                 },\n//                 attract: {\n//                   enable: false,\n//                   rotateX: 600,\n//                   rotateY: 1200,\n//                 },\n//               },\n//               zIndex: {\n//                 value: 5,\n//                 opacityRate: 0.5,\n//               },\n//             },\n//             detectRetina: true,\n//             background: {\n//               image: HexBg,\n//               position: \"50% 50%\",\n//               repeat: \"no-repeat\",\n//               size: \"cover\",\n//               opacity: 0.2,\n//             },\n//             emitters: {\n//               position: {\n//                 y: 110,\n//                 x: 50,\n//               },\n//               rate: {\n//                 delay: 3,\n//                 quantity: 1,\n//               },\n//               size: {\n//                 width: 0,\n//                 height: 0,\n//               },\n//             },\n//           }}\n//         />\n//       </Container>\n//     </>\n//   );\n// }\n\nfunction Confetti() {\n  return (\n    <>\n      <Container>\n        <Particles\n          id=\"tsparticles\"\n          options={{\n            particles: {\n              number: {\n                value: 0\n              },\n              color: {\n                value: [\n                  \"#00FFFC\",\n                  \"#FC00FF\",\n                  \"#fffc00\"\n                ]\n              },\n              shape: {\n                type: [\n                  \"circle\",\n                  \"square\"\n                ],\n                options: {}\n              },\n              opacity: {\n                value: 1,\n                animation: {\n                  enable: true,\n                  minimumValue: 0,\n                  speed: 2,\n                  startValue: \"max\",\n                  destroy: \"min\"\n                }\n              },\n              size: {\n                value: 6,\n                random: {\n                  enable: true,\n                  minimumValue: 2\n                }\n              },\n              links: {\n                enable: false\n              },\n              life: {\n                duration: {\n                  sync: true,\n                  value: 5\n                },\n                count: 1\n              },\n              move: {\n                enable: true,\n                gravity: {\n                  enable: true,\n                  acceleration: 10\n                },\n                speed: {\n                  min: 10,\n                  max: 60\n                },\n                decay: 0.1,\n                direction: \"none\",\n                straight: false,\n                outModes: {\n                  default: \"destroy\",\n                  top: \"none\"\n                }\n              },\n              rotate: {\n                value: {\n                  min: 0,\n                  max: 360\n                },\n                direction: \"random\",\n                // move: true, \n                animation: {\n                  enable: true,\n                  speed: 60\n                }\n              },\n              tilt: {\n                direction: \"random\",\n                enable: true,\n                // move: true,\n                value: {\n                  min: 0,\n                  max: 360\n                },\n                animation: {\n                  enable: true,\n                  speed: 60\n                }\n              },\n              roll: {\n                darken: {\n                  enable: true,\n                  value: 25\n                },\n                enable: true,\n                speed: {\n                  min: 15,\n                  max: 25\n                }\n              },\n              wobble: {\n                distance: 30,\n                enable: true,\n                // move: true,\n                speed: {\n                  min: -15,\n                  max: 15\n                }\n              }\n            },\n            emitters: {\n              life: {\n                count: 0,\n                duration: 0.1,\n                delay: 0.9\n              },\n              rate: {\n                delay: 0.1,\n                quantity: 250\n              },\n              size: {\n                width: 0,\n                height: 0\n              }\n            }}\n          }\n        />\n      </Container>\n    </>\n  );\n}\n\n// export default FloatingPears;\n\nexport default Confetti\n\nexport { Confetti };\n","import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport PageLoader from \"components/PageLoader\";\nimport { Confetti } from \"./Sprites\";\n\nconst animateLightBar = keyframes`\n\t0%,5% {\n\t\ttransform: scaleY(0) ;\n\t}\n    10%{\n        transform: scaleY(1) ;\n    }\n\t90% {\n        transform: scaleY(1) ;\n\t}\n\t95%,100% {\n        transform: scaleY(0) ;\n\t}\n`;\nconst TextBoxAnimation = keyframes`\n   0%,5% {\n\t\ttransform: translate3d(-80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(-80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst BorderShow = keyframes`\n    0%{\n\t\topacity:0;\n\t}\n   \n\t95% {\n        opacity:0;\n\t}\n    100%{\n        opacity:1;\n    }\n`;\nconst Container = styled.div`\n  position: relative;\n  padding: 3rem;\n  @media only screen and (max-width: 500px) {\n    padding: 3rem 0 0 0;\n  }\n`;\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  position: relative;\n  top: 10%;\n  left: 10%;\n  width: 80%;\n  font-size: 2rem;\n  background-color: #04d9ff24;\n  border-radius: 10px;\n  z-index: 3;\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    box-shadow: inset 0 0 0.1em #04d9ff, inset 0 0 0.2em #04d9ff,\n      inset 0 0 0.5em #04d9ff, 0 0 4em #04d9ff;\n    animation: ${BorderShow} 2s linear forwards;\n    border: 5px solid #fff;\n    border-radius: inherit;\n  }\n  @media only screen and (max-width: 500px) {\n    top: 15%;\n  }\n  @media only screen and (min-width: 568px) {\n    font-size: 3.5rem;\n  }\n  @media only screen and (min-width: 768px) {\n    font-size: 5rem;\n  }\n`;\nconst TextBox = styled.div`\n  overflow: hidden;\n  width: 100%;\n  /* transform: translate(300px,0); */\n  animation: ${TextBoxAnimation} 2s linear forwards;\n  padding: 1rem 1rem;\n`;\nconst H1 = styled.h1`\n  text-align: center;\n  font-size: inherit;\n  color: #fff;\n  text-shadow: 0 0 0.2em #ff3333, 0 0 0.3em #ff3333, 0 0 0.5em #ff3333,\n    0 0 8.8em #ff3333, 0 0 8.6em #ff3333;\n  animation: ${TextAnimation} 2s linear forwards;\n`;\nconst LightBar = styled.div`\n  position: relative;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 10px;\n  background-color: #fff;\n  z-index: 2;\n  box-shadow: 0 0 10px #04d9ff, 0 0 20px #04d9ff, 0 0 40px #04d9ff,\n    0 0 80px #04d9ff, 0 0 120px #04d9ff;\n  animation: ${animateLightBar} 2s linear forwards;\n`;\n\nfunction Landing({ videoPlayed, setVideoPlayed }) {\n  const [imageLoading, setImageLoading] = useState(false);\n  const [videoLoading, setVideoLoading] = useState(true);\n  const [videoPlaying, setVideoPlaying] = useState(videoPlayed);\n  return (\n    <Container>\n      {imageLoading ? (\n        <PageLoader />\n      ) : (\n        <Wrapper>\n          <TextBox>\n            <H1>\n              Rappears <br /> DAO\n            </H1>\n            <LightBar />\n          </TextBox>\n        </Wrapper>\n      )}\n      <Confetti />\n    </Container>\n  );\n}\n\nexport default Landing;\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Heading, Text, BaseLayout } from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport Page from \"components/layout/Page\";\r\nimport FarmStakingCard from \"views/Home/components/FarmStakingCard\";\r\n// import LotteryCard from 'views/Home/components/LotteryCard'\r\nimport CakeStats from \"views/Home/components/CakeStats\";\r\nimport TotalValueLockedCard from \"views/Home/components/TotalValueLockedCard\";\r\nimport EarnAPYCard from \"views/Home/components/EarnAPYCard\";\r\n// import EarnAssetCard from 'views/Home/components/EarnAssetCard'\r\n// import WinCard from 'views/Home/components/WinCard'\r\n// import Logo from 'views/Home/components/Logo'\r\nimport Landing from \"components/custom/Landing\";\r\nimport BrickBg from 'assets/images/brickBg.jpg'\r\n\r\n\r\nconst Container = styled(Page)`\r\n  background: #090e1a url(${BrickBg});\r\n  padding: 0;\r\n  max-width: 100vw;\r\n`;\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  margin-bottom: 32px;\r\n  text-align: center;\r\n`;\r\n\r\nconst CTACards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 4;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  > div {\r\n    width: 100%;\r\n    margin: 1rem;\r\n  }\r\n  @media only screen and (min-width: 800px) {\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n    > div {\r\n      min-width: 45%;\r\n      max-width: 45%;\r\n      margin: 0 1rem;\r\n    }\r\n  }\r\n`;\r\nconst Home = ({ videoPlayed,setVideoPlayed }) => {\r\n  const TranslateString = useI18n();\r\n\r\n  return (\r\n    <Container>\r\n      <Landing videoPlayed={videoPlayed} setVideoPlayed={setVideoPlayed} />\r\n      <div style={{ padding: \"3rem 1rem\" }}>\r\n        <Flex>\r\n          <EarnAPYCard />\r\n          <FarmStakingCard />\r\n        </Flex>\r\n        <CTACards/>\r\n        <Flex>\r\n          <CakeStats />\r\n          <TotalValueLockedCard />\r\n        </Flex>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { Heading } from \"@pancakeswap-libs/uikit\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\n\nconst Heading1 = styled(Heading)`\n  text-shadow: 0 0 0.2em #ff3333, 0 0 0.3em #ff3333, 0 0 0.5em #ff3333,\n    0 0 8.8em #ff3333, 0 0 8.6em #ff3333;\n`;\n\nexport default Heading1;\n","import React from \"react\";\nimport { Card } from \"@pancakeswap-libs/uikit\";\nimport styled, { keyframes, css } from \"styled-components\";\n\nconst pulse = ({theme}) => keyframes`\n  0% {\n    box-shadow: 0 0 1rem ${theme.colors.borderColor}, 0 0 1rem ${theme.colors.borderColor}, inset 0 0 2rem 0 ${theme.colors.borderColor};\n  }\n  50% {\n    box-shadow: 0 0 4rem ${theme.colors.borderColor}, 0 0 2rem ${theme.colors.borderColor}, inset 0 0 4.5rem 0 ${theme.colors.borderColor};\n  }\n  100% {\n    box-shadow: 0 0 1rem ${theme.colors.borderColor}), 0 0 1rem $${theme.colors.borderColor},inset 0 0 2rem 0 ${theme.colors.borderColor};\n  }\n`;\n\nconst Card1 = styled(Card)<{ animate?: boolean }>`\n  animation: ${({ animate }) => (animate ? css`${pulse} 1s 1s infinite ` : \"none\")};\n  background: #ff333310;\n  backdrop-filter: blur(2px);\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\n  box-shadow: 0 0 2rem ${({ theme }) => theme.colors.borderColor},\n    0 0 2rem ${({ theme }) => theme.colors.borderColor},\n    inset 0 0 2rem ${({ theme }) => theme.colors.borderColor};\n`;\n\nexport default Card1;\n","import { useEffect, useState, useRef } from 'react'\r\nimport Web3 from 'web3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: 60vh;\r\n  max-height: 120vh;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","import { useMemo } from 'react'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport {\r\n  getContract,\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoContract,\r\n  getLotteryContract,\r\n  getLotteryTicketContract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoContract = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getIfoContract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getCakeContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getProfileContract(web3), [web3])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryContract(web3), [web3])\r\n}\r\n\r\nexport const useLotteryTicket = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getMasterchefContract(web3), [web3])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getClaimRefundContract(web3), [web3])\r\n}\r\n\r\nexport const useContract = (abi: any, address: any) =>{\r\n  const web3 = useWeb3()\r\n  return useMemo(() => getContract(abi, address, web3), [abi, address, web3])\r\n}","export default __webpack_public_path__ + \"static/media/brickBg.ee97b925.jpg\";"],"sourceRoot":""}